{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hajer\\\\Desktop\\\\chatgptclone\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../css/chat.css';\nimport '../normal.css';\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { chatbot } from '../Redux/ChatSlice';\nimport { resetChatState } from '../Redux/ChatSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n  const chat = useSelector(state => state.ChatReducer.chat);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch(chatbot({\n      text\n    }));\n    setText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chathome\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"chat-input-textarea\",\n            rows: \"1\",\n            placeholder: \"type your message\",\n            value: text,\n            onChange: e => setText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chat.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${message.role}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-message-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message\",\n              children: [\" \", message.content, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_s(Home, \"rZLjdbKoS1UoRmdZW8Oljs7rTAk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Link","useNavigate","useDispatch","useSelector","chatbot","resetChatState","jsxDEV","_jsxDEV","Home","_s","text","setText","dispatch","chat","state","ChatReducer","handleSubmit","e","preventDefault","className","children","onSubmit","rows","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","role","content","_c","$RefreshReg$"],"sources":["C:/Users/Hajer/Desktop/chatgptclone/client/src/pages/Home.js"],"sourcesContent":["import React from 'react'\r\nimport '../css/chat.css';\r\nimport '../normal.css'\r\nimport  { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { chatbot } from '../Redux/ChatSlice';\r\nimport { resetChatState } from '../Redux/ChatSlice';\r\nconst Home = () => {\r\n    const [text, setText] = useState('');\r\n    const dispatch = useDispatch();\r\n    const chat = useSelector((state) => state.ChatReducer.chat);\r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      dispatch(chatbot({ text }));\r\n      setText('');\r\n    };\r\n  \r\n    return (\r\n      <div className='chathome'>\r\n        {/* ... existing code ... */}\r\n        <section className='chatbox'>\r\n          <div className='chat-input-holder'>\r\n            <form onSubmit={handleSubmit}>\r\n              <input\r\n                className='chat-input-textarea'\r\n                rows='1'\r\n                placeholder='type your message'\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}\r\n              />\r\n            </form>\r\n          </div>\r\n          <div className='chat-log'>\r\n            {chat.map((message, index) => (\r\n              <div key={index} className={`chat-message ${message.role}`}>\r\n                <div className='chat-message-center'>\r\n                  <div className='avatar'> </div>\r\n                  <div className='message'> {message.content} </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}