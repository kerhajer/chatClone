{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hajer\\\\Desktop\\\\chatgptclone\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../css/chat.css';\nimport '../normal.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { chatbot } from '../Redux/ChatSlice';\nimport { resetChatState } from '../Redux/ChatSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [text, setText] = useState('');\n  const chat = useSelector(state => state.ChatReducer.chat);\n  const messageuser = useSelector(state => state.ChatReducer.messageuser);\n  const dispatch = useDispatch();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch(chatbot({\n      text\n    }));\n    setText('');\n  };\n  const handleNewChat = () => {\n    dispatch(resetChatState());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chathome\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidemenu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-menu-button\",\n        onClick: handleNewChat,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            paddingLeft: '6px',\n            paddingRight: '12px',\n            width: '1rem'\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), \" New Chat\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"chat-input-textarea\",\n            rows: \"1\",\n            placeholder: \"type your message\",\n            value: text,\n            onChange: e => {\n              setText(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chat.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${message.role === 'chatbot' && 'chatgpt'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-message-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"FdiBh20eA2uwESyEnlHZQNyH2ZM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","chatbot","resetChatState","jsxDEV","_jsxDEV","Home","_s","text","setText","chat","state","ChatReducer","messageuser","dispatch","handleSubmit","e","preventDefault","handleNewChat","className","children","onClick","style","paddingLeft","paddingRight","width","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","placeholder","value","onChange","target","map","message","index","role","content","_c","$RefreshReg$"],"sources":["C:/Users/Hajer/Desktop/chatgptclone/client/src/pages/Home.js"],"sourcesContent":["import React from 'react';\r\nimport '../css/chat.css';\r\nimport '../normal.css';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { chatbot } from '../Redux/ChatSlice';\r\nimport { resetChatState } from '../Redux/ChatSlice';\r\n\r\nconst Home = () => {\r\n  const [text, setText] = useState('');\r\n  const chat = useSelector((state) => state.ChatReducer.chat);\r\n  const messageuser = useSelector((state) => state.ChatReducer.messageuser);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(chatbot({ text }));\r\n    setText('');\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    dispatch(resetChatState());\r\n  };\r\n\r\n  return (\r\n    <div className='chathome'>\r\n      <aside className='sidemenu'>\r\n        <div className='side-menu-button' onClick={handleNewChat}>\r\n          <span style={{ paddingLeft: '6px', paddingRight: '12px', width: '1rem' }}>+</span> New Chat\r\n        </div>\r\n      </aside>\r\n      <section className='chatbox'>\r\n        <div className='chat-input-holder'>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              className='chat-input-textarea'\r\n              rows='1'\r\n              placeholder='type your message'\r\n              value={text}\r\n              onChange={(e) => {\r\n                setText(e.target.value);\r\n              }}\r\n            ></input>\r\n          </form>\r\n        </div>\r\n        <div className='chat-log'>\r\n         \r\n          {/* Display other chatbot messages */}\r\n          {chat.map((message, index) => (\r\n            <div key={index} className={`chat-message ${message.role === 'chatbot' && 'chatgpt'}`}>\r\n              <div className='chat-message-center'>\r\n                \r\n                <div className='message'>{message.content}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}