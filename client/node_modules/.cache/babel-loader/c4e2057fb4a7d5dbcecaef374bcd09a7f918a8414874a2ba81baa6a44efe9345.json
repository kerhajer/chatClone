{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst createConfig = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    return {\n      headers: {\n        token\n      }\n    };\n  } else {\n    return {};\n  }\n};\nexport const modelschat = createAsyncThunk('chat/modelschat', async (_, {\n  rejectWithValue\n}) => {\n  const config = createConfig();\n  try {\n    const {\n      data\n    } = await axios.get('http://localhost:5000/api/chat/models', config);\n    return data;\n  } catch (error) {\n    // Log the error message\n    console.error('Error', error);\n    return rejectWithValue(error.response.data.message);\n  }\n});\nconst initialState = {\n  isLoading: false,\n  registerErrors: null,\n  msg: null,\n  chat: JSON.parse(localStorage.getItem('chat')) || [],\n  messageuser: {},\n  models: []\n};\nconst chatSlice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    resetChatState: state => {\n      state.isLoading = false;\n      state.registerErrors = null;\n      state.chat = [];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(chatbot.pending, state => {\n      state.isLoading = true;\n    }).addCase(chatbot.fulfilled, (state, {\n      type,\n      payload\n    }) => {\n      state.isLoading = false;\n      state.messageuser = payload.newMessage;\n      state.chat.push(payload.newMessage, payload.botMessage);\n      localStorage.setItem('chat', JSON.stringify(state.chat));\n    }).addCase(modelschat.pending, state => {\n      state.isLoading = true;\n    }).addCase(modelschat.fulfilled, (state, {\n      type,\n      payload\n    }) => {\n      state.isLoading = false;\n      state.models = payload;\n      localStorage.setItem('models', JSON.stringify(state.models));\n    });\n  }\n});\nexport const {\n  resetChatState\n} = chatSlice.actions;\nexport default chatSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","createConfig","token","localStorage","getItem","headers","modelschat","_","rejectWithValue","config","data","get","error","console","response","message","initialState","isLoading","registerErrors","msg","chat","JSON","parse","messageuser","models","chatSlice","name","reducers","resetChatState","state","extraReducers","builder","addCase","chatbot","pending","fulfilled","type","payload","newMessage","push","botMessage","setItem","stringify","actions","reducer"],"sources":["C:/Users/Hajer/Desktop/chatgptclone/client/src/Redux/ChatSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      return {\r\n        headers: {\r\n          token\r\n        }\r\n      };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n \r\n\r\n \r\n  export const modelschat= createAsyncThunk('chat/modelschat', async (_, { rejectWithValue }) => {\r\n    const config = createConfig();\r\n  \r\n  \r\n    try {\r\n  \r\n  \r\n      const { data } = await axios.get('http://localhost:5000/api/chat/models', config);\r\n  \r\n\r\n    return data ;\r\n    } catch (error) {\r\n      // Log the error message\r\n      console.error('Error', error);\r\n  \r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  });\r\n\r\nconst initialState = {\r\n\r\n  isLoading: false,\r\n  registerErrors: null,\r\n  msg: null,\r\n  chat: JSON.parse(localStorage.getItem('chat')) || [],\r\n  messageuser:{ },\r\n  models:[]\r\n\r\n};\r\n\r\nconst chatSlice = createSlice({\r\n  name: 'chat',\r\n  initialState,\r\n  reducers: {\r\n  \r\n    resetChatState: (state) => {\r\n        state.isLoading = false;\r\n        state.registerErrors = null;\r\n        state.chat = [];\r\n      },\r\n\r\n\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(chatbot.pending, (state) => {\r\n        state.isLoading = true;\r\n\r\n\r\n\r\n      })\r\n      .addCase(chatbot.fulfilled, (state, { type, payload }) => {\r\n        state.isLoading = false;\r\n        state.messageuser=payload.newMessage\r\n\r\n        state.chat.push(payload.newMessage, payload.botMessage );\r\n\r\n        localStorage.setItem('chat', JSON.stringify(state.chat));\r\n\r\n       \r\n      })\r\n  \r\n     \r\n      .addCase(modelschat.pending, (state) => {\r\n        state.isLoading = true;\r\n\r\n\r\n\r\n      })\r\n      .addCase(modelschat.fulfilled, (state, { type, payload }) => {\r\n        state.isLoading = false;\r\n\r\n        state.models= payload\r\n        localStorage.setItem('models', JSON.stringify(state.models));\r\n\r\n\r\n       \r\n      })\r\n  \r\n\r\n\r\n\r\n\r\n      \r\n  }\r\n\r\n});\r\n\r\nexport const { resetChatState } = chatSlice.actions;\r\n\r\nexport default chatSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}